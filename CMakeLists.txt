CMAKE_MINIMUM_REQUIRED(VERSION 3.1 FATAL_ERROR)
PROJECT(hacklib_project)

# set the default configuration to debug
IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE "Release")
ENDIF()

SET(PROJ_ROOT       "${CMAKE_CURRENT_SOURCE_DIR}")
IF(CMAKE_SIZEOF_VOID_P EQUAL 8)
    SET(ARCH_64BIT TRUE)
    ADD_DEFINITIONS(-DARCH_64BIT)
    SET(PROJ_BIN        ${PROJ_ROOT}/bin64)
    SET(PROJ_LIB        ${PROJ_ROOT}/lib64)
ELSE()
    SET(PROJ_BIN        ${PROJ_ROOT}/bin)
    SET(PROJ_LIB        ${PROJ_ROOT}/lib)
ENDIF()

# default output directories
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY          ${PROJ_BIN})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG    ${PROJ_BIN})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE  ${PROJ_BIN})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY          ${PROJ_BIN})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG    ${PROJ_BIN})
SET(CAMKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE  ${PROJ_BIN})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY          ${PROJ_LIB})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG    ${PROJ_LIB})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE  ${PROJ_LIB})

IF(WIN32)
    LINK_DIRECTORIES(${PROJ_LIB})
    INCLUDE_DIRECTORIES(${PROJ_ROOT}/include)
ENDIF()

# global configuration
SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
SET(CMAKE_POSITION_INDEPENDENT_CODE ON)
SET(CMAKE_DEBUG_POSTFIX "d")
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
IF(CMAKE_CXX_COMPILER_ID MATCHES "(C|c?)lang")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP /W0 -Xclang -fasm-blocks")
ENDIF()
# Disable exceptions
#string(REGEX REPLACE "/EHsc" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
# Statically compile runtime
string(REGEX REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
IF(WIN32)
    ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)  # microsofts useless warnings
    ADD_DEFINITIONS(-D_SCL_SECURE_NO_WARNINGS)  # microsofts useless warnings
    ADD_DEFINITIONS(-DNOMINMAX)  # microsofts wonderful macros for min and max
ELSEIF(UNIX)
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -D_DEBUG")
    SET(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -D_DEBUG")
ENDIF()

# projects
FILE(GLOB subdirs RELATIVE ${PROJ_ROOT} ${PROJ_ROOT}/src/*)
FOREACH(subdir ${subdirs})
    IF(IS_DIRECTORY ${PROJ_ROOT}/${subdir})
        ADD_SUBDIRECTORY(${PROJ_ROOT}/${subdir})
    ENDIF()
ENDFOREACH()
